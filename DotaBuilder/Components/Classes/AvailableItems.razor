@using DataLibrary
@using DotaBuilder.Models
@using static DotaBuilder.Components.Classes.Item_button_class
@inject IDataAccess _data
@inject IConfiguration _config

@if (items == null)
{
    <p><em>Loading...</em></p>
}
else
{
<body>
    <table class="styled-table">
        <td>
            <table class="sub-table">
                <tr>
                    <td>Consumables</td>
                </tr>
                <tr>
                    @foreach (var item in items)
                    {
                    <tr>
                        <Item_button_class ButtonText="@item.item_name"
                                           ButtonId="@item.item_name"
                                           ButtonClass="btn"
                                           ButtonDescription="@item.item_description"
                                           BackgroundPath="@item.item_image_path"
                                           CssClass="item-button"
                                           OnClickEvent="OnClick"
                                           OnHoverEvent="OnHover" />
                    </tr>
                    }
                </tr>
            </table>
        </td>
        <td>
            <table class="sub-table">
                <tr>
                    <td>Attributes</td>
                </tr>
                <tr>
                    @foreach (var item in items)
                    {
                    <tr>
                            <Item_button_class ButtonText="@item.item_name"
                                               ButtonId="@item.item_name"
                                               ButtonClass="btn"
                                               ButtonDescription="@item.item_description"
                                               BackgroundPath="@item.item_image_path"
                                               CssClass="item-button"
                                               OnClickEvent="OnClick"
                                               OnHoverEvent="OnHover" />
                    </tr>
                    }
                </tr>
            </table>
        </td>
    </table>
</body>
}

<style>
    .main-table {
        border-collapse: collapse;
        margin: 25px 0;
        font-size: 0.9em;
        font-family: sans-serif;
        min-width: 400px;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.15);
    }

    .sub-table{

    }

    table, th, td {
        border: 1px solid white;
        border-collapse: collapse;
        table-layout: auto;
    }

    td {
        overflow: hidden;
        text-overflow: ellipsis;
        word-wrap: break-word;
    }
</style>

@code {

    List<ItemModel> items;
    protected override async Task OnInitializedAsync()
    {
        string sql = "SELECT * FROM items";

        items = await _data.LoadDataAsync<ItemModel, dynamic>(sql, new { }, _config.GetConnectionString("default"));
    }

    private void OnClick(EventCallbackItemArgs args)
    {
        Console.WriteLine("[Click] Button ID: {0}", args.Name);
    }

    private void OnHover(EventCallbackItemArgs args)
    {
        Console.WriteLine("[Hover] Button ID: {0}", args.Name);
    }
}

