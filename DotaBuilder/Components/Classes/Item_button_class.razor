<Tooltip_class Tip="@GetToolTip(ButtonDescription)">
    <button
        class="@ButtonClass @CssClass"
        style="background-image:url(@GetImage(BackgroundPath));"
        @onclick="OnClick"
        @onmouseover="OnHover">
    </button>
</Tooltip_class>

<style>
    .item-button {
        border: none;
        border-radius: 5px;
        cursor: pointer;
        object-fit: fill;
        background-repeat: no-repeat;
        background-size: contain;
        height: 44px;
        width: 60px;
    }

        .item-button:hover {
            background-color: #black;
        }
</style>

@code {
    [Parameter] public string ButtonText { get; set; }

    [Parameter] public string ButtonClass { get; set; }

    [Parameter] public string BackgroundPath { get; set; }

    [Parameter] public string ButtonDescription { get; set; }

    [Parameter] public string CssClass { get; set; }

    [Parameter] public EventCallback OnClick { get; set; }

    [Parameter] public EventCallback OnHover { get; set; }

    private bool FirstLoad { get; set; } = true;

    private string GetImage(string imagePath)
    {
        //Console.WriteLine("[Loading] Image path: ./{0}", imagePath);

        if (File.Exists(Path.Combine(System.IO.Directory.GetCurrentDirectory(), "wwwroot", imagePath)))
        {
            return "./" + imagePath;
        }
        else
        {
            return "./images/Unknown_Item_icon.webp";
        }
    }

    private string GetToolTip(string tooltipItemName)
    {
        return tooltipItemName;
    }

    protected override async Task OnInitializedAsync()
    {
        FirstLoad = false;
    }

}